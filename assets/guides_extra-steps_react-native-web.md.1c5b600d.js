import{_ as e,c as t,o as a,a as r}from"./app.df6e09a4.js";const u=JSON.parse('{"title":"React Native Web","description":"","frontmatter":{},"headers":[],"relativePath":"guides/extra-steps/react-native-web.md"}'),c={name:"guides/extra-steps/react-native-web.md"},i=r('<h1 id="react-native-web" tabindex="-1">React Native Web <a class="header-anchor" href="#react-native-web" aria-hidden="true">#</a></h1><p>The <a href="https://github.com/react-native-webrtc/react-native-webrtc-web-shim" target="_blank" rel="noreferrer">react-native-webrtc-web-shim</a> project provides a shim for <a href="https://github.com/necolas/react-native-web" target="_blank" rel="noreferrer">react-native-web</a> support.</p><p>That will allow you to use <a href="https://github.com/react-native-webrtc/react-native-webrtc-web-shim/tree/main#setup" target="_blank" rel="noreferrer">&quot;almost&quot;</a> the exact same code in your mixed web project as you would with <a href="https://reactnative.dev/" target="_blank" rel="noreferrer">react-native</a> directly.</p>',3),o=[i];function n(s,_,h,p,b,d){return a(),t("div",null,o)}const v=e(c,[["render",n]]);export{u as __pageData,v as default};
